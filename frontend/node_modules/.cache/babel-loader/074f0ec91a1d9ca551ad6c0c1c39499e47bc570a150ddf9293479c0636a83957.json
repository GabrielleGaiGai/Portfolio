{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst POSTS_URL = \"http://localhost:3500/projects/get\";\nconst initialState = {\n  projects: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchProjects = createAsyncThunk('projects/fetchProjects/get', async () => {\n  const response = await axios.get(POSTS_URL);\n  return response.data;\n});\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState,\n  reducers: {\n    projectAdded: {\n      reducer: (state, action) => {\n        state.projects.push(action.payload);\n      },\n      prepare: (title, content) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title: title,\n            content: content\n          }\n        };\n      }\n    }\n  }\n});\nexport const selectAllProjects = state => state.projects;\nexport const {\n  projectAdded\n} = projectsSlice.actions;\nexport default projectsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","axios","POSTS_URL","initialState","projects","status","error","fetchProjects","response","get","data","projectsSlice","name","reducers","projectAdded","reducer","state","action","push","payload","prepare","title","content","id","selectAllProjects","actions"],"sources":["/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/projectsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { nanoid } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\n\nconst POSTS_URL = \"http://localhost:3500/projects/get\"\n\nconst initialState = {\n    projects: [],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchProjects = createAsyncThunk('projects/fetchProjects/get', async () => {\n    const response = await axios.get(POSTS_URL)\n    return response.data\n})\n\n\nconst projectsSlice = createSlice({\n    name: 'projects',\n    initialState,\n    reducers: {\n        projectAdded: {\n            reducer: (state, action) => {\n                state.projects.push(action.payload)\n            },\n            prepare: (title, content) => {\n                return {\n                    payload: {\n                        id: nanoid(),\n                        title: title,\n                        content: content\n                    }\n                }\n            }\n        }\n    }\n})\n\nexport const selectAllProjects = (state) => state.projects;\n\nexport const { projectAdded } = projectsSlice.actions;\n\nexport default projectsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,SAAS,GAAG,oCAAoC;AAEtD,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGR,gBAAgB,CAAC,4BAA4B,EAAE,YAAY;EACpF,MAAMS,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,SAAS,CAAC;EAC3C,OAAOM,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAGF,MAAMC,aAAa,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,UAAU;EAChBT,YAAY;EACZU,QAAQ,EAAE;IACNC,YAAY,EAAE;MACVC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;QACxBD,KAAK,CAACZ,QAAQ,CAACc,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACvC,CAAC;MACDC,OAAO,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;QACzB,OAAO;UACHH,OAAO,EAAE;YACLI,EAAE,EAAEvB,MAAM,CAAC,CAAC;YACZqB,KAAK,EAAEA,KAAK;YACZC,OAAO,EAAEA;UACb;QACJ,CAAC;MACL;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAIR,KAAK,IAAKA,KAAK,CAACZ,QAAQ;AAE1D,OAAO,MAAM;EAAEU;AAAa,CAAC,GAAGH,aAAa,CAACc,OAAO;AAErD,eAAed,aAAa,CAACI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}