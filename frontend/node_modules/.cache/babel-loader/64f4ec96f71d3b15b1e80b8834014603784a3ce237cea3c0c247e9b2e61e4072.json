{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  allProjects: [{\n    id: '1',\n    title: 'First Post!',\n    content: 'Hello!'\n  }, {\n    id: '2',\n    title: 'Second Post',\n    content: 'More text'\n  }],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get('http://localhost:3500/api/data');\n  return response.data;\n});\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState,\n  reducers: {\n    projectAdded: {\n      reducer: (state, action) => {\n        state.allProjects.push(action.payload);\n      },\n      prepare: (title, content) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content\n          }\n        };\n      }\n    },\n    projectUpdated: {\n      reducer: (state, action) => {\n        const existingProject = state.allProjects.find(project => project.id === action.payload.id);\n        if (existingProject) {\n          existingProject.title = action.payload.title;\n          existingProject.content = action.payload.content;\n        }\n      },\n      prepare: (id, title, content) => {\n        return {\n          payload: {\n            id,\n            title,\n            content\n          }\n        };\n      }\n    }\n  }\n});\nexport const selectAllProjects = state => state.projects.allProjects;\nexport const selectProjectById = (state, Id) => state.projects.allProjects.find(project => project.id === Id);\n\n// action creater, which is automatically created with the same name as reducer\nexport const {\n  projectAdded,\n  projectUpdated\n} = projectsSlice.actions;\nexport default projectsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","axios","createAsyncThunk","initialState","allProjects","id","title","content","status","error","fetchPosts","response","get","data","projectsSlice","name","reducers","projectAdded","reducer","state","action","push","payload","prepare","projectUpdated","existingProject","find","project","selectAllProjects","projects","selectProjectById","Id","actions"],"sources":["/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/projectsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { nanoid } from \"@reduxjs/toolkit\"\nimport axios from 'axios';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    allProjects: [\n        { id: '1', title: 'First Post!', content: 'Hello!' },\n        { id: '2', title: 'Second Post', content: 'More text' }\n    ],\n    status: 'idle',\n    error: null\n}\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const response = await axios.get('http://localhost:3500/api/data');\n    return response.data\n  })\n\n\nconst projectsSlice = createSlice({\n    name: 'projects',\n    initialState,\n    reducers: {\n        projectAdded: {\n            reducer: (state, action) => {\n                state.allProjects.push(action.payload)\n            },\n            prepare: (title, content) => {\n                return {\n                    payload: {\n                        id: nanoid(),\n                        title,\n                        content\n                    }\n                }\n            }\n        },\n        projectUpdated: {\n            reducer: (state, action) => {\n                const existingProject = state.allProjects.find(project => project.id === action.payload.id)\n                if (existingProject) {\n                    existingProject.title = action.payload.title\n                    existingProject.content = action.payload.content\n                }\n\n            },\n            prepare: (id, title, content) => {\n                return {\n                    payload: {\n                        id,\n                        title,\n                        content\n                    }\n                }\n            }\n        },\n\n    }\n})\n\nexport const selectAllProjects = (state) => state.projects.allProjects;\nexport const selectProjectById = (state, Id) => state.projects.allProjects.find(project => project.id === Id)\n\n// action creater, which is automatically created with the same name as reducer\nexport const { projectAdded, projectUpdated } = projectsSlice.actions;\n\nexport default projectsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AAGnD,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,CACT;IAAEC,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,aAAa;IAAEC,OAAO,EAAE;EAAS,CAAC,EACpD;IAAEF,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,aAAa;IAAEC,OAAO,EAAE;EAAY,CAAC,CAC1D;EACDC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGR,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMS,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAGJ,MAAMC,aAAa,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,UAAU;EAChBZ,YAAY;EACZa,QAAQ,EAAE;IACNC,YAAY,EAAE;MACVC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;QACxBD,KAAK,CAACf,WAAW,CAACiB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC1C,CAAC;MACDC,OAAO,EAAEA,CAACjB,KAAK,EAAEC,OAAO,KAAK;QACzB,OAAO;UACHe,OAAO,EAAE;YACLjB,EAAE,EAAEL,MAAM,CAAC,CAAC;YACZM,KAAK;YACLC;UACJ;QACJ,CAAC;MACL;IACJ,CAAC;IACDiB,cAAc,EAAE;MACZN,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;QACxB,MAAMK,eAAe,GAAGN,KAAK,CAACf,WAAW,CAACsB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACtB,EAAE,KAAKe,MAAM,CAACE,OAAO,CAACjB,EAAE,CAAC;QAC3F,IAAIoB,eAAe,EAAE;UACjBA,eAAe,CAACnB,KAAK,GAAGc,MAAM,CAACE,OAAO,CAAChB,KAAK;UAC5CmB,eAAe,CAAClB,OAAO,GAAGa,MAAM,CAACE,OAAO,CAACf,OAAO;QACpD;MAEJ,CAAC;MACDgB,OAAO,EAAEA,CAAClB,EAAE,EAAEC,KAAK,EAAEC,OAAO,KAAK;QAC7B,OAAO;UACHe,OAAO,EAAE;YACLjB,EAAE;YACFC,KAAK;YACLC;UACJ;QACJ,CAAC;MACL;IACJ;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMqB,iBAAiB,GAAIT,KAAK,IAAKA,KAAK,CAACU,QAAQ,CAACzB,WAAW;AACtE,OAAO,MAAM0B,iBAAiB,GAAGA,CAACX,KAAK,EAAEY,EAAE,KAAKZ,KAAK,CAACU,QAAQ,CAACzB,WAAW,CAACsB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACtB,EAAE,KAAK0B,EAAE,CAAC;;AAE7G;AACA,OAAO,MAAM;EAAEd,YAAY;EAAEO;AAAe,CAAC,GAAGV,aAAa,CAACkB,OAAO;AAErE,eAAelB,aAAa,CAACI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}