{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/EditProject.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEditProjectMutation, useLazyGetProjectQuery } from \"../api/apiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProject = () => {\n  _s();\n  const id = useParams().projectId;\n  const [editProject] = useEditProjectMutation();\n  const [getProject, result] = useLazyGetProjectQuery();\n  useEffect(() => {\n    const fetch = async () => {};\n    getProject(id);\n  }, [id, getProject]);\n  console.log(result);\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const navigate = useNavigate();\n  const onSaveProjectClicked = async () => {\n    try {\n      await editProject({\n        id,\n        title,\n        summary\n      }).unwrap();\n      setTitle('');\n      setSummary('');\n      navigate(`/projects`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"project__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"projectTitle\",\n        children: \"Project Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"projectTitle\",\n        name: \"projectTitle\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"projectContent\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"projectContent\",\n        name: \"projectContent\",\n        value: summary,\n        onChange: e => {\n          setSummary(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"project__button\",\n        onClick: onSaveProjectClicked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProject, \"AjzeNyVtJZBctt0TlBqOogbn0G0=\", false, function () {\n  return [useParams, useEditProjectMutation, useLazyGetProjectQuery, useNavigate];\n});\n_c = EditProject;\nexport default EditProject;\nvar _c;\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","useEditProjectMutation","useLazyGetProjectQuery","jsxDEV","_jsxDEV","EditProject","_s","id","projectId","editProject","getProject","result","fetch","console","log","title","setTitle","summary","setSummary","navigate","onSaveProjectClicked","unwrap","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/EditProject.js"],"sourcesContent":["\nimport { useEffect, useState } from \"react\"\nimport { useParams } from 'react-router-dom'\nimport { useNavigate } from \"react-router-dom\"\nimport { useEditProjectMutation, useLazyGetProjectQuery } from \"../api/apiSlice\";\n\nconst EditProject = () => {\n    const id = useParams().projectId;\n\n    const [editProject] = useEditProjectMutation()\n\n    const [getProject, result] = useLazyGetProjectQuery()\n\n    useEffect(() => {\n        const fetch = async () => {\n            \n        }\n         getProject(id)\n    }, [id, getProject])\n\n    console.log(result)\n\n    const [title, setTitle] = useState('')\n    const [summary, setSummary] = useState('')\n\n    const navigate = useNavigate()\n\n    const onSaveProjectClicked = async () => {\n        try {\n            await editProject({ id, title, summary }).unwrap()\n            setTitle('')\n            setSummary('')\n            navigate(`/projects`)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <main>\n            <h2>Edit Project</h2>\n            <form className=\"project__form\">\n                <label htmlFor=\"projectTitle\">Project Title:</label>\n                <input type=\"text\" id=\"projectTitle\" name=\"projectTitle\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\n\n                <label htmlFor=\"projectContent\">Summary:</label>\n                <textarea id=\"projectContent\" name=\"projectContent\" value={summary} onChange={(e) => { setSummary(e.target.value) }} />\n\n                <button type=\"button\" className=\"project__button\" onClick={onSaveProjectClicked} >\n                    Save Post\n                </button>\n            </form>\n        </main>\n    )\n\n\n\n}\nexport default EditProject"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}