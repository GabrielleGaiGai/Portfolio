{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/EditProject.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { patchProject } from \"./projectsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectProjectById } from \"./projectsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProject = () => {\n  _s();\n  const id = useParams().projectId;\n  // const project = useSelector(state => selectProjectById(state, id))\n\n  const [title, setTitle] = useState(project.title);\n  const [summary, setSummary] = useState(project.summary);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onSaveProjectClicked = async () => {\n    try {\n      dispatch(patchProject({\n        id,\n        title,\n        summary\n      })).unwrap();\n      setTitle('');\n      setSummary('');\n      navigate(`/project/${id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit a New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"project__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"projectTitle\",\n        children: \"Project Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"projectTitle\",\n        name: \"projectTitle\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"projectContent\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"projectContent\",\n        name: \"projectContent\",\n        value: summary,\n        onChange: e => {\n          setSummary(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"project__button\",\n        onClick: onSaveProjectClicked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProject, \"LfzsJbrduA2CGK6YxJAKrqRd9Aw=\", false, function () {\n  return [useParams, useDispatch, useNavigate];\n});\n_c = EditProject;\nexport default EditProject;\nvar _c;\n$RefreshReg$(_c, \"EditProject\");","map":{"version":3,"names":["useState","patchProject","useDispatch","useParams","useSelector","useNavigate","selectProjectById","jsxDEV","_jsxDEV","EditProject","_s","id","projectId","title","setTitle","project","summary","setSummary","dispatch","navigate","onSaveProjectClicked","unwrap","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/gabrielle/Documents/Development/portfolio/frontend/src/features/projects/EditProject.js"],"sourcesContent":["\nimport { useState } from \"react\"\nimport { patchProject } from \"./projectsSlice\"\nimport { useDispatch } from \"react-redux\"\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\"\nimport { selectProjectById } from \"./projectsSlice\";\n\nconst EditProject = () => {\n    const id = useParams().projectId;\n    // const project = useSelector(state => selectProjectById(state, id))\n\n    const [title, setTitle] = useState(project.title)\n    const [summary, setSummary] = useState(project.summary)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const onSaveProjectClicked = async () => {\n        try {\n            dispatch(patchProject({ id, title, summary })).unwrap()\n            setTitle('')\n            setSummary('')\n            navigate(`/project/${id}`)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <main>\n            <h2>Edit a New Project</h2>\n            <form className=\"project__form\">\n                <label htmlFor=\"projectTitle\">Project Title:</label>\n                <input type=\"text\" id=\"projectTitle\" name=\"projectTitle\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\n\n                <label htmlFor=\"projectContent\">Summary:</label>\n                <textarea id=\"projectContent\" name=\"projectContent\" value={summary} onChange={(e) => { setSummary(e.target.value) }} />\n\n                <button type=\"button\" className=\"project__button\" onClick={onSaveProjectClicked} >\n                    Save Post\n                </button>\n            </form>\n        </main>\n    )\n}\nexport default EditProject"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}